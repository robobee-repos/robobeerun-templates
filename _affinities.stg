/*
 * Adds affinity group section.
 *
 * Mandatory:
 *
 * affinity.key
 * affinity.name
 * 
 * Optional:
 *
 * affinity.required
 * 
 * Example:
 * 
 * import "_affinities.stg"
 * 
 * bb-site-wordpress-yaml(parent, vars) ::= <<
 * apiVersion: extensions/v1beta1
 * kind: Deployment
 * metadata:
 *   name: wordpress
 *   namespace: site-com
 *   labels:
 *     app: wordpress
 *     tier: frontend
 *     group: site-com
 * spec:
 *   replicas: 1
 *   selector:
 *     matchLabels:
 *       app: wordpress
 *       tier: frontend
 *       group: site-com
 *   template:
 *     metadata:
 *       labels:
 *        app: wordpress
 *         tier: frontend
 *         group: site-com
 *     spec:
 *       containers:
 *       - image: <vars.wordpress.image.name>:<vars.wordpress.image.version>
 * ...
 * <affinitiesGroup(parent, vars, vars.wordpress.affinity)>
 * >>
 * 
 */
affinitiesGroup(parent, vars, affinity) ::= <<
<if(affinity)>
      <affinitiesSection(parent, vars, affinity)>
<endif>
>>

/*
 * Adds affinity section.
 *
 * Mandatory:
 *
 * affinity.key
 * affinity.name
 * 
 * Optional:
 *
 * affinity.required
 */
affinitiesSection(parent, vars, affinity) ::= <<
affinity:
  nodeAffinity:
<if(affinity.required)>
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: <affinity.key>
          operator: In
          values:
          - required
<else>
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 1
      preference:
        matchExpressions:
        - key: <affinity.key>
          operator: In
          values:
          - preferred
<endif>
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: <affinity.key>
            operator: In
            values:
            - <affinity.name>
        topologyKey: kubernetes.io/hostname
>>
